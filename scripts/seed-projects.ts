import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

async function main() {
  console.log("üå± Cr√©ation des projets d'exemple...");
  await createSampleProjects();
  console.log("‚úÖ Projets cr√©√©s avec succ√®s !");
}

main()
  .catch((e) => {
    console.error("‚ùå Erreur lors de la cr√©ation des projets:", e);
    process.exit(1);
  })
  .finally(async () => {
    const { prisma } = await import("../lib/prisma");
    await prisma.$disconnect();
  });

// Fonction pour cr√©er des projets d'exemple (utile pour tester)
async function createSampleProjects() {
  const sampleProjects = [
    {
      title: "E-commerce Platform",
      slug: "ecommerce-platform",
      description:
        "Plateforme e-commerce compl√®te avec syst√®me de paiement int√©gr√©, gestion des stocks, tableau de bord administrateur et interface utilisateur moderne.",
      longDescription:
        "Une plateforme e-commerce full-stack d√©velopp√©e avec Next.js et TypeScript. Cette application int√®gre Stripe pour les paiements s√©curis√©s, PostgreSQL pour la gestion robuste des donn√©es, et un syst√®me d'authentification complet avec NextAuth.js. L'interface utilisateur est enti√®rement responsive et optimis√©e pour la conversion avec un design moderne utilisant Tailwind CSS.",
      imageUrl: "/placeholder-project.jpg",
      images: [
        "/placeholder-project.jpg",
        "/placeholder-project.jpg",
        "/placeholder-project.jpg",
      ],
      tags: ["Next.js", "Stripe", "PostgreSQL"],
      technologies: [
        "Next.js",
        "TypeScript",
        "Stripe",
        "PostgreSQL",
        "Tailwind CSS",
        "NextAuth.js",
        "Prisma",
        "Vercel",
      ],
      features: [
        "Authentification s√©curis√©e avec NextAuth.js",
        "Paiements int√©gr√©s avec Stripe",
        "Gestion compl√®te des stocks",
        "Tableau de bord administrateur",
        "Interface responsive et moderne",
        "Optimisations SEO avanc√©es",
        "API REST compl√®te",
        "Syst√®me de notifications",
      ],
      category: "Fullstack",
      status: "Termin√©",
      date: "2024",
      duration: "3 mois",
      client: "Projet personnel",
      githubUrl: "https://github.com",
      liveUrl: "https://demo.com",
      featured: true,
      isPublished: true,
    },
    {
      title: "Task Management App",
      slug: "task-management-app",
      description:
        "Application de gestion de t√¢ches collaborative avec fonctionnalit√©s temps r√©el, √©quipes, assignations et suivi de progression.",
      longDescription:
        "Application web collaborative pour la gestion de projets et t√¢ches d√©velopp√©e avec React et Node.js. Elle propose des fonctionnalit√©s temps r√©el gr√¢ce √† Socket.io, un syst√®me complet de gestion d'√©quipes, des notifications push, et un tableau de bord analytique pour suivre la productivit√©. L'application supporte la collaboration en temps r√©el avec mise √† jour instantan√©e des t√¢ches.",
      imageUrl: "/placeholder-project.jpg",
      images: [
        "/placeholder-project.jpg",
        "/placeholder-project.jpg",
        "/placeholder-project.jpg",
      ],
      tags: ["React", "Node.js", "Socket.io"],
      technologies: [
        "React",
        "Node.js",
        "Socket.io",
        "MongoDB",
        "Express",
        "JWT",
        "Material-UI",
        "Chart.js",
      ],
      features: [
        "Collaboration temps r√©el avec Socket.io",
        "Gestion d'√©quipes et permissions",
        "Assignation de t√¢ches dynamique",
        "Tableau de bord analytique",
        "Notifications push en temps r√©el",
        "Calendrier int√©gr√©",
        "Export de donn√©es",
        "Interface drag & drop",
      ],
      category: "Fullstack",
      status: "Termin√©",
      date: "2024",
      duration: "4 mois",
      client: "Startup",
      githubUrl: "https://github.com",
      liveUrl: "https://demo.com",
      featured: true,
      isPublished: true,
    },
    {
      title: "Portfolio Website",
      slug: "portfolio-website",
      description:
        "Site portfolio moderne et responsive avec animations fluides, optimis√© pour le SEO et la performance.",
      longDescription:
        "Site portfolio personnel d√©velopp√© avec Next.js 14 et les derni√®res technologies web. Il int√®gre des animations fluides avec Framer Motion, un syst√®me de gestion de contenu headless pour faciliter la maintenance, et des optimisations SEO avanc√©es. Le site est con√ßu pour une performance optimale avec un score parfait sur Lighthouse.",
      imageUrl: "/placeholder-project.jpg",
      images: [
        "/placeholder-project.jpg",
        "/placeholder-project.jpg",
        "/placeholder-project.jpg",
      ],
      tags: ["Next.js", "Tailwind", "Framer Motion"],
      technologies: [
        "Next.js",
        "Tailwind CSS",
        "Framer Motion",
        "MDX",
        "TypeScript",
        "Vercel",
        "Sanity CMS",
      ],
      features: [
        "Design moderne et responsive",
        "Animations fluides avec Framer Motion",
        "CMS headless int√©gr√©",
        "Optimisations SEO avanc√©es",
        "Performance optimis√©e",
        "Mode sombre/clair",
        "Blog int√©gr√© avec MDX",
        "Formulaire de contact fonctionnel",
      ],
      category: "Frontend",
      status: "Termin√©",
      date: "2024",
      duration: "2 mois",
      client: "Projet personnel",
      githubUrl: "https://github.com",
      liveUrl: "https://demo.com",
      featured: true,
      isPublished: true,
    },
  ];

  try {
    for (const project of sampleProjects) {
      await prisma.project.upsert({
        where: { slug: project.slug },
        update: project,
        create: project,
      });
    }
    console.log("Projets d'exemple cr√©√©s avec succ√®s");
  } catch (error) {
    console.error("Erreur lors de la cr√©ation des projets d'exemple:", error);
  }
}
