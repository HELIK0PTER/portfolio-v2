generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  emailVerified Boolean   @default(false) @map("email_verified")
  name          String?
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  accounts      Account[]
  sessions      Session[]

  @@map("user")
}

model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime @map("expires_at")
  token     String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  ipAddress String?  @map("ip_address")
  userAgent String?  @map("user_agent")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id @default(cuid())
  accountId             String    @map("account_id")
  providerId            String    @map("provider_id")
  userId                String    @map("user_id")
  accessToken           String?   @map("access_token")
  refreshToken          String?   @map("refresh_token")
  idToken               String?   @map("id_token")
  accessTokenExpiresAt  DateTime? @map("access_token_expires_at")
  refreshTokenExpiresAt DateTime? @map("refresh_token_expires_at")
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @updatedAt @map("updated_at")
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String   @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime @map("expires_at")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("verification")
}

model Project {
  id              String   @id @default(cuid())
  title           String
  slug            String   @unique
  description     String
  longDescription String   @map("long_description")
  imageUrl        String   @map("image_url")
  images          String[]
  tags            String[]
  technologies    String[]
  features        String[]
  category        String
  status          String
  date            String
  duration        String
  client          String
  githubUrl       String   @map("github_url")
  liveUrl         String?  @map("live_url")
  featured        Boolean  @default(false)
  isPublished     Boolean  @default(false) @map("is_published")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("projects")
}

model Service {
  id          String   @id @default(cuid())
  title       String
  description String
  price       Float
  isPublished Boolean  @default(false) @map("is_published")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("services")
}

model Article {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  excerpt     String
  content     String
  author      String   @default("Matheus Kops Guedes")
  publishedAt DateTime @default(now()) @map("published_at")
  readTime    Int      @default(5) @map("read_time")
  views       Int      @default(0)
  category    String
  tags        String[]
  imageUrl    String?  @map("image_url")
  featured    Boolean  @default(false)
  isPublished Boolean  @default(false) @map("is_published")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("articles")
}

model Lab {
  id          String   @id @default(cuid())
  title       String
  description String
  url         String
  isPublished Boolean  @default(false) @map("is_published")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("labs")
}

model Profile {
  id        String   @id @default(cuid())
  fullName  String   @map("full_name")
  bio       String
  avatarUrl String   @map("avatar_url")
  links     Json
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("profiles")
}

model ContactSettings {
  id               String   @id @default(cuid())
  contactEmail     String   @map("contact_email")
  phone            String?
  location         String   @default("France")
  availability     String   @default("Lun - Ven, 9h - 18h")
  responseTime     String   @default("Je réponds généralement dans les 24h") @map("response_time")
  preferredContact String   @default("email") @map("preferred_contact")
  autoReply        Boolean  @default(true) @map("auto_reply")
  autoReplyMessage String?  @map("auto_reply_message")
  smtpHost         String   @default("smtp.gmail.com") @map("smtp_host")
  smtpPort         Int      @default(587) @map("smtp_port")
  smtpSecure       Boolean  @default(false) @map("smtp_secure")
  smtpUser         String   @default("") @map("smtp_user")
  smtpPassword     String   @default("") @map("smtp_password")
  smtpFromName     String   @default("Portfolio Contact") @map("smtp_from_name")
  smtpFromEmail    String   @default("") @map("smtp_from_email")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  @@map("contact_settings")
}

model Education {
  id          String    @id @default(cuid())
  title       String
  institution String
  location    String
  description String
  startDate   DateTime  @map("start_date")
  endDate     DateTime? @map("end_date")
  isCurrently Boolean   @default(false) @map("is_currently")
  grade       String?
  skills      String[]
  isPublished Boolean   @default(false) @map("is_published")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("educations")
}

model Experience {
  id          String    @id @default(cuid())
  title       String
  company     String
  location    String
  description String
  startDate   DateTime  @map("start_date")
  endDate     DateTime? @map("end_date")
  isCurrently Boolean   @default(false) @map("is_currently")
  skills      String[]
  companyUrl  String?   @map("company_url")
  isPublished Boolean   @default(false) @map("is_published")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("experiences")
}
